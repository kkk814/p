-- Create the Book table
CREATE TABLE Book (
    Book_no SERIAL PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(100),
    price DECIMAL(10, 2),
    year_published INT
);

-- Create the Customer table
CREATE TABLE Customer (
    cid SERIAL PRIMARY KEY,
    cname VARCHAR(100),
    addr VARCHAR(255)
);

-- Create the junction table Book_Customer to represent the many-to-many relationship
CREATE TABLE Book_Customer (
    Book_no INT,
    cid INT,
    quantity INT,
    PRIMARY KEY (Book_no, cid),
    FOREIGN KEY (Book_no) REFERENCES Book(Book_no) ON DELETE CASCADE,
    FOREIGN KEY (cid) REFERENCES Customer(cid) ON DELETE CASCADE
);

-- Inserting sample data into the Book table
INSERT INTO Book (title, author, price, year_published)
VALUES
('The Great Gatsby', 'F. Scott Fitzgerald', 10.99, 1925),
('To Kill a Mockingbird', 'Harper Lee', 8.99, 1960),
('1984', 'George Orwell', 12.99, 1949),
('Pride and Prejudice', 'Jane Austen', 7.99, 1813),
('The Catcher in the Rye', 'J.D. Salinger', 9.99, 1951);

-- Inserting sample data into the Customer table
INSERT INTO Customer (cname, addr)
VALUES
('Alice Johnson', 'Pune'),
('Bob Smith', 'Mumbai'),
('Charlie Brown', 'Pune'),
('David Williams', 'Chennai'),
('Eva Green', 'Pune');

-- Inserting sample data into the Book_Customer junction table
INSERT INTO Book_Customer (Book_no, cid, quantity)
VALUES
(1, 1, 3),  -- Alice Johnson has 3 copies of The Great Gatsby
(1, 2, 2),  -- Bob Smith has 2 copies of The Great Gatsby
(2, 3, 1),  -- Charlie Brown has 1 copy of To Kill a Mockingbird
(3, 1, 1),  -- Alice Johnson has 1 copy of 1984
(5, 4, 2),  -- David Williams has 2 copies of The Catcher in the Rye
(4, 5, 3);  -- Eva Green has 3 copies of Pride and Prejudice

--1
SELECT *
FROM Customer
WHERE addr = 'Pune';

--2
SELECT author, array_agg(title) AS books
FROM Book
GROUP BY author;

--3
SELECT AVG(price) AS avg_price
FROM Book;

--4
DELETE FROM Book
WHERE Book_no = 3;

--B
CREATE OR REPLACE FUNCTION get_books_published_in_2024()
RETURNS VOID AS $$
DECLARE
    book_cursor CURSOR FOR
        SELECT Book_no, title, author, price, year_published
        FROM Book
        WHERE year_published = 2024;
    book_record RECORD;
BEGIN
    OPEN book_cursor;
    
    LOOP
        FETCH book_cursor INTO book_record;
        
        EXIT WHEN NOT FOUND;
        
        -- Print the details of each book
        RAISE NOTICE 'Book No: %, Title: %, Author: %, Price: %, Year Published: %',
            book_record.Book_no, book_record.title, book_record.author, book_record.price, book_record.year_published;
    END LOOP;
    
    CLOSE book_cursor;
END;
$$ LANGUAGE plpgsql;

SELECT get_books_published_in_2024();
